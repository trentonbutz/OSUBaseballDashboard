library(shiny)
library(ggplot2)
library(dplyr)
library(readxl)

pitch <- read_excel("PitchByPitchUpdate (2).xlsx",
                    col_types = c("guess", "guess", "guess", 
                                  "guess", "guess", "guess", "guess", "guess", "guess", 
                                  "guess", "guess", "guess", "guess", "guess", "guess", 
                                  "guess", "guess", "guess", "text", "guess", "guess", 
                                  "guess", "guess", "guess", "guess", "guess", "guess", 
                                  "guess", "guess", "guess", "guess", "guess", "guess"))

# Defining the User Interface
ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      # Choosing pitcher
      selectInput(inputId = "Pitcher",
                  label = "Pitcher:",
                  choices = c("All Pitchers", "Brock", "Burhenn", "G. Smith", 
                              "Gahm", "Hammerberg", "Loncar", 
                              "Lonsway", "Magno", "Milheim", 
                              "Murphy", "Pfennig", "Root",
                              "Smith", "Vance", "Waning"),
                  selected = "All Pitchers"),
      # Choosing Situation - choose as many as you want
      checkboxGroupInput(inputId = "Base",
                         label = "Bases Scenario",
                         choices = c("Runner on First", "Runner on Second", "Runner on Third"), 
                         inline = TRUE),
      #Choosing score - choose as many as you want
      checkboxGroupInput(inputId = "Score",
                         label = "Score Differential",
                         choices = c("<-5", "-4", "-3",
                                     "-2", "-1", "0", 
                                     "+1", "+2", "+3",
                                     "+4", ">+5"),
                         selected = c("<-5", "-4", "-3",
                                      "-2", "-1", "0", 
                                      "+1", "+2", "+3",
                                      "+4", ">+5")),
      textOutput("title"),
      plotOutput("selected_rows")
    ),
    # Output is a barplot 
    mainPanel(
      tabsetPanel(
        tabPanel("Plot",
                 fluidRow(
                   column(12, plotOutput(outputId = "bar", click = "bar1_click")),
                   column(12, plotOutput(outputId = "bar2")))))
    )
  )
)

# Telling R what kind of plot to make
server <- function(input, output, session){
  
  output$bar <- renderPlot({
    thisPitcher <- input$Pitcher
    Runner_First <- 0
    Runner_Second <- 0
    Runner_Third <- 0
    
    score__5 <- 6
    score__4 <- 6
    score__3 <- 6
    score__2 <- 6
    score__1 <- 6
    score_0 <- 6
    score_1 <- 6
    score_2 <- 6
    score_3 <- 6
    score_4 <- 6
    score_5 <- 6
    
    
    
    if("Runner on First" %in% input$Base){
      Runner_First <- 1
    }
    if("Runner on Second" %in% input$Base){
      Runner_Second <- 1
    }
    if("Runner on Third" %in% input$Base){
      Runner_Third <- 1
    }
    
    if("-5" %in% input$Score){
      score__5 <- -5
    }
    if("-4" %in% input$Score){
      score__4 <- -4
    }
    if("-3" %in% input$Score){
      score__3 <- -3
    }
    if("-2" %in% input$Score){
      score__2 <- -2
    }
    if("-1" %in% input$Score){
      score__1 <- -1
    }
    if("0" %in% input$Score){
      score_0 <- 0
    }
    if("+1" %in% input$Score){
      score_1 <- 1
    }
    if("+2" %in% input$Score){
      score_2 <- 2
    }
    if("+3" %in% input$Score){
      score_3 <- 3
    }
    if("+4" %in% input$Score){
      score_4 <- 4
    }
    if("+5" %in% input$Score){
      score_5 <- 5
    }
    
    
    pitch_clean <- pitch %>%
      select(inning, First, Second, Third, Pitch_Type, pitcher, total_score) %>%
      mutate(pitch_type = as.character(Pitch_Type)) %>%
      select(-Pitch_Type)
    
    if(thisPitcher == "All Pitchers"){
      data1 <- filter(pitch_clean,
                      First == Runner_First & Second == Runner_Second & Third == Runner_Third,
                      total_score == score__5 | total_score == score__4 |
                        total_score == score__3 | total_score == score__2 |
                        total_score == score__1 | total_score == score_0 |
                        total_score == score_1 | total_score == score_2 |
                        total_score == score_3 | total_score == score_4 | total_score == score_5) %>%
        group_by(pitch_type) %>%
        count(pitch_type) %>%
        filter(!is.na(pitch_type))
    } else {
      data1 <- filter(pitch_clean, pitcher == thisPitcher,
                      First == Runner_First & Second == Runner_Second & Third == Runner_Third,
                      total_score == score__5 | total_score == score__4 |
                        total_score == score__3 | total_score == score__2 |
                        total_score == score__1 | total_score == score_0 |
                        total_score == score_1 | total_score == score_2 |
                        total_score == score_3 | total_score == score_4 | total_score == score_5) %>%
        group_by(pitch_type) %>%
        count(pitch_type) %>%
        filter(!is.na(pitch_type))
    }
    
    
    
    if(nrow(data1) < 1){
      new <- data.frame('pitch_type'='1', "n" = 0)
      data1 <- rbind(data1, new)
      data1[order("pitch_type"), ]
      new <- data.frame('pitch_type'='2', "n" = 0)
      data1 <- rbind(data1, new)
      data1[order("pitch_type"), ]
      new <- data.frame('pitch_type'='3', "n" = 0)
      data1 <- rbind(data1, new)
      data1[order("pitch_type"), ]
      new <- data.frame('pitch_type'='4', "n" = 0)
      data1 <- rbind(data1, new)
      data1[order("pitch_type"),]
    }
    else if(nrow(data1) < 2){
      new <- data.frame('pitch_type'='2', "n" = 0)
      data1 <- rbind(data1, new)
      data1[order("pitch_type"), ]
      new <- data.frame('pitch_type'='3', "n" = 0)
      data1 <- rbind(data1, new)
      data1[order("pitch_type"), ]
      new <- data.frame('pitch_type'='4', "n" = 0)
      data1 <- rbind(data1, new)
      data1[order("pitch_type"),]
    }
    else if(nrow(data1) < 3){
      if(data1[2,1] == 2){
        new <- data.frame('pitch_type'='3', "n" = 0)
        data1 <- rbind(data1, new)
        data1[order("pitch_type"), ]
        new <- data.frame('pitch_type'='4', "n" = 0)
        data1 <- rbind(data1, new)
        data1[order("pitch_type"),]
      } else if (data1[2,1] == 3){
        new <- data.frame('pitch_type'='2', "n" = 0)
        data1 <- rbind(data1, new)
        data1[order("pitch_type"), ]
        new <- data.frame('pitch_type'='4', "n" = 0)
        data1 <- rbind(data1, new)
        data1[order("pitch_type"),]
      } else {
        new <- data.frame('pitch_type'='2', "n" = 0)
        data1 <- rbind(data1, new)
        data1[order("pitch_type"), ]
        new <- data.frame('pitch_type'='3', "n" = 0)
        data1 <- rbind(data1, new)
        data1[order("pitch_type"),]
      }
      
    }
    else if(nrow(data1) < 4){
      if(data1[2,1] == 2){
        if(data1[3,1] == 3){
          new <- data.frame('pitch_type'='4', "n" = 0)
          data1 <- rbind(data1, new)
          data1[order("pitch_type"),]
        } else {
          new <- data.frame('pitch_type'='3', "n" = 0)
          data1 <- rbind(data1, new)
          data1[order("pitch_type"), ]
        }
      }
      else if(data1[2,1] == 3){
        new <- data.frame('pitch_type'='2', "n" = 0)
        data1 <- rbind(data1, new)
        data1[order("pitch_type"),]
      }
    }
    data1[order("pitch_type"),]
    
    ggplot(data1, aes(x = pitch_type, y = n, fill = pitch_type)) + 
      geom_bar(stat = "identity") + geom_text(aes(label=n)) + ggtitle("Distribution of Situational Pitch Types") + xlab("Type of Pitch") + ylab("Frequency of Type")
    
  })
  
  
  ###For Scenario 2
  output$bar2 <- renderPlot({
    thisPitcher <- input$Pitcher
    
    pitch_clean <- pitch %>%
      select(inning, First, Second, Third, Pitch_Type, pitcher) %>%
      mutate(pitch_type = as.character(Pitch_Type)) %>%
      select(-Pitch_Type)
    
    if(thisPitcher == "All Pitchers"){
      data2 <- filter(pitch_clean) %>%
        group_by(pitch_type) %>%
        count(pitch_type) %>%
        filter(!is.na(pitch_type))
    } else {
      data2 <- filter(pitch_clean, pitcher == thisPitcher) %>%
        group_by(pitch_type) %>%
        count(pitch_type) %>%
        filter(!is.na(pitch_type))
    }
    
    
    if(nrow(data2) < 1){
      new <- data.frame('pitch_type'='1', "n" = 0)
      data2 <- rbind(data2, new)
      data2[order("pitch_type"), ]
      new <- data.frame('pitch_type'='2', "n" = 0)
      data2 <- rbind(data2, new)
      data2[order("pitch_type"), ]
      new <- data.frame('pitch_type'='3', "n" = 0)
      data2 <- rbind(data2, new)
      data2[order("pitch_type"), ]
      new <- data.frame('pitch_type'='4', "n" = 0)
      data2 <- rbind(data2, new)
      data2[order("pitch_type"),]
    }
    else if(nrow(data2) < 2){
      new <- data.frame('pitch_type'='2', "n" = 0)
      data2 <- rbind(data2, new)
      data2[order("pitch_type"), ]
      new <- data.frame('pitch_type'='3', "n" = 0)
      data2 <- rbind(data2, new)
      data2[order("pitch_type"), ]
      new <- data.frame('pitch_type'='4', "n" = 0)
      data2 <- rbind(data2, new)
      data2[order("pitch_type"),]
    }
    else if(nrow(data2) < 3){
      if(data2[2,1] == 2){
        new <- data.frame('pitch_type'='3', "n" = 0)
        data2 <- rbind(data2, new)
        data2[order("pitch_type"), ]
        new <- data.frame('pitch_type'='4', "n" = 0)
        data2 <- rbind(data2, new)
        data2[order("pitch_type"),]
      } else if (data2[2,1] == 3){
        new <- data.frame('pitch_type'='2', "n" = 0)
        data2 <- rbind(data2, new)
        data2[order("pitch_type"), ]
        new <- data.frame('pitch_type'='4', "n" = 0)
        data2 <- rbind(data2, new)
        data2[order("pitch_type"),]
      } else {
        new <- data.frame('pitch_type'='2', "n" = 0)
        data2 <- rbind(data2, new)
        data2[order("pitch_type"), ]
        new <- data.frame('pitch_type'='3', "n" = 0)
        data2 <- rbind(data2, new)
        data2[order("pitch_type"),]
      }
      
    }
    else if(nrow(data2) < 4){
      if(data2[2,1] == 2){
        if(data2[3,1] == 3){
          new <- data.frame('pitch_type'='4', "n" = 0)
          data2 <- rbind(data2, new)
          data2[order("pitch_type"),]
        } else {
          new <- data.frame('pitch_type'='3', "n" = 0)
          data2 <- rbind(data2, new)
          data2[order("pitch_type"), ]
        }
      }
      else if(data2[2,1] == 3){
        new <- data.frame('pitch_type'='2', "n" = 0)
        data2 <- rbind(data2, new)
        data2[order("pitch_type"),]
      }
    }
    data2[order("pitch_type")]
    
    ggplot(data2, aes(x = pitch_type, y = n, fill = pitch_type)) + 
      geom_bar(stat = "identity") + geom_text(aes(label=n)) + ggtitle("Distribution of Total Pitch Types") + xlab("Type of Pitch") + ylab("Frequency of Type")
    
  })
  
  output$title <- renderText({
    if(is.null(input$bar1_click$x)) return("Click bar to see Outcomes of Pitches")
    else {
      click1 <- as.character(round(input$bar1_click$x))
      thisPitcher <- input$Pitcher
      HTML("Distribution of Outcomes for ", thisPitcher, " ",
           "throwing pitch type ", click1, " with set score",
           "differential and base runners.")
    }
  })
  
  output$selected_rows <- renderPlot({
    thisPitcher <- input$Pitcher
    Runner_First <- 0
    Runner_Second <- 0
    Runner_Third <- 0
    
    score__5 <- 6
    score__4 <- 6
    score__3 <- 6
    score__2 <- 6
    score__1 <- 6
    score_0 <- 6
    score_1 <- 6
    score_2 <- 6
    score_3 <- 6
    score_4 <- 6
    score_5 <- 6
    
    
    
    if("Runner on First" %in% input$Base){
      Runner_First <- 1
    }
    if("Runner on Second" %in% input$Base){
      Runner_Second <- 1
    }
    if("Runner on Third" %in% input$Base){
      Runner_Third <- 1
    }
    
    if("-5" %in% input$Score){
      score__5 <- -5
    }
    if("-4" %in% input$Score){
      score__4 <- -4
    }
    if("-3" %in% input$Score){
      score__3 <- -3
    }
    if("-2" %in% input$Score){
      score__2 <- -2
    }
    if("-1" %in% input$Score){
      score__1 <- -1
    }
    if("0" %in% input$Score){
      score_0 <- 0
    }
    if("+1" %in% input$Score){
      score_1 <- 1
    }
    if("+2" %in% input$Score){
      score_2 <- 2
    }
    if("+3" %in% input$Score){
      score_3 <- 3
    }
    if("+4" %in% input$Score){
      score_4 <- 4
    }
    if("+5" %in% input$Score){
      score_5 <- 5
    }
    
    if (is.null(input$bar1_click$x)) return()
    else {
      click1 <- as.character(round(input$bar1_click$x))
      pitch_clean <- pitch %>%
        select(inning, First, Second, Third, Pitch_Type, pitcher, total_score, Simple_Outcomes) %>%
        mutate(pitch_type = as.character(Pitch_Type)) %>%
        select(-Pitch_Type)
      
      if(thisPitcher == "All Pitchers"){
        data3 <- filter(pitch_clean,
                        First == Runner_First & Second == Runner_Second & Third == Runner_Third,
                        pitch_type == click1,
                        total_score == score__5 | total_score == score__4 |
                          total_score == score__3 | total_score == score__2 |
                          total_score == score__1 | total_score == score_0 |
                          total_score == score_1 | total_score == score_2 |
                          total_score == score_3 | total_score == score_4 | total_score == score_5) %>%
          group_by(Simple_Outcomes) %>%
          count(Simple_Outcomes)
      } else {
        data3 <- filter(pitch_clean, pitcher == thisPitcher,
                        First == Runner_First & Second == Runner_Second & Third == Runner_Third,
                        pitch_type == click1,
                        total_score == score__5 | total_score == score__4 |
                          total_score == score__3 | total_score == score__2 |
                          total_score == score__1 | total_score == score_0 |
                          total_score == score_1 | total_score == score_2 |
                          total_score == score_3 | total_score == score_4 | total_score == score_5) %>%
          group_by(Simple_Outcomes) %>%
          count(Simple_Outcomes)
      }
      ggplot(data3, aes(x = Simple_Outcomes, y = n, fill = Simple_Outcomes)) + 
        geom_bar(stat = "identity") + geom_text(aes(label=n)) + ggtitle("Outcomes for Selected Bar") + xlab("Outcome") + ylab("Frequency of Outcomes")
    }
  })
  
  
}
# Generating the Shiny app
shinyApp(ui = ui, server = server)
